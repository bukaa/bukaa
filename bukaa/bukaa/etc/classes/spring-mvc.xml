<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
                        http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	<!-- 扫描@Controller注解类 -->
	<context:component-scan base-package="cn.bukaa.controller.*"/>
	
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
	    <property name="locations">  
	    	<list>  
	          	<value>classpath*:/redis.properties</value>
	    	</list>  
	    </property>  
	</bean>
	
	<!-- 避免JSON下载 -->
	<bean id="mappingFastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
            	<value>text/html;charset=UTF-8</value>
                <value>application/json</value>
            </list>
        </property>
        <property name="features">
            <list>
                <value>WriteMapNullValue</value>
                <value>WriteNullStringAsEmpty</value>
                <value>QuoteFieldNames</value>
                <value>WriteDateUseDateFormat</value>
            </list>
        </property>
	</bean>
	
	<!-- 启动SpringMVC的注解功能 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
				<ref bean="mappingFastJsonHttpMessageConverter"/>
			</list>
		</property>
	</bean>
	
	<!-- 静态文件 
    <mvc:resources location="/assets/" mapping="/assets/**"></mvc:resources>
     -->
	
	<!-- 页面跳转 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"/>
		<property name="maxUploadSize" value="10485760000"/>
		<property name="maxInMemorySize" value="40960"/>
	</bean>
	
	<!-- 配置redis start -->
     <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
      	<property name="maxActive" value="${redis.maxActive}" />
      	<property name="maxWait" value="${redis.maxWait}" />
      	<property name="maxIdle" value="${redis.maxIdle}" />
      	<property name="testOnBorrow" value="${redis.testOnBorrow}"/>
      	<property name="testOnReturn" value="${redis.testOnReturn}"/>
    </bean>
    
    <bean id = "jedisPool" class="redis.clients.jedis.JedisPool">
      	<constructor-arg index="0" ref="poolConfig"/>
      	<constructor-arg index="1" value="${redis.host}" />  
        <constructor-arg index="2" value="${redis.port}" type="int" />
        <constructor-arg index="3" value="${redis.timeout}" type="int" /> 
        <constructor-arg index="4" value="${redis.auth}" />
    </bean>
    
    <!-- 集群时使用 -->
    <bean id = "shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
      	<constructor-arg index="0" ref="poolConfig"/>
      	<constructor-arg index="1">  
        	<list>  
            	<bean class="redis.clients.jedis.JedisShardInfo">  
                	<constructor-arg 
                    	index="0" 
                    	value="${redis.host}" />  
                	<constructor-arg 
                    	index="1" 
                    	value="${redis.port}" 
                    	type="int" />  
               		<constructor-arg 
                    	index="2" 
                    	value="${redis.auth}" />  
            	</bean> 
            	<!-- 多台服务器时使用 -->
            	<!-- <bean class="redis.clients.jedis.JedisShardInfo">  
                <constructor-arg  
                    index="0"  
                    value="${redis2.ip}" />  
                <constructor-arg  
                    index="1"  
                    value="${redis.port}"  
                    type="int" />  
            	</bean>  -->
        	</list>  
       	</constructor-arg>  
    </bean>

    <!-- 配置redis end -->
    
</beans>