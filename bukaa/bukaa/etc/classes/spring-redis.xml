<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/cache
                        http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">
    
    <!-- 引入配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
	    <property name="locations">  
	    	<list>  
	          	<value>classpath*:/redis.properties</value>
	    	</list>  
	    </property>  
	</bean>
    
	<!-- 配置redis start -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
      	<property name="maxWaitMillis" value="${redis.maxWait}" />
      	<property name="maxIdle" value="${redis.maxIdle}" />
      	<property name="testOnBorrow" value="${redis.testOnBorrow}"/>
      	<property name="testOnReturn" value="${redis.testOnReturn}"/>
    </bean>
    
    <bean id="RedisClientStart" class="cn.bukaa.util.redis.RedisClientStart">
    	<property name="jedisPool" ref="jedisPool"></property>
    	<property name="shardedJedisPool" ref="shardedJedisPool"></property>
    </bean>
    
    <bean id="jedis" factory-bean="RedisClientStart" factory-method="getJedis">
    </bean>
    
    <bean id = "jedisPool" class="redis.clients.jedis.JedisPool">
      	<constructor-arg index="0" ref="poolConfig"/>
      	<constructor-arg index="1" value="${redis.host}" />  
        <constructor-arg index="2" value="${redis.port}" type="int" />
        <constructor-arg index="3" value="${redis.timeout}" type="int" /> 
        <constructor-arg index="4" value="${redis.auth}" />
    </bean>
    
    <!-- 集群时使用 -->
    <bean id = "shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
      	<constructor-arg index="0" ref="poolConfig"/>
      	<constructor-arg index="1">  
        	<list>  
            	<bean class="redis.clients.jedis.JedisShardInfo">  
                	<constructor-arg 
                    	index="0" 
                    	value="${redis.host}" />  
                	<constructor-arg 
                    	index="1" 
                    	value="${redis.port}" 
                    	type="int" />  
               		<constructor-arg 
                    	index="2" 
                    	value="${redis.auth}" />  
            	</bean> 
            	<!-- 多台服务器时使用 -->
            	<!-- <bean class="redis.clients.jedis.JedisShardInfo">  
                <constructor-arg  
                    index="0"  
                    value="${redis2.ip}" />  
                <constructor-arg  
                    index="1"  
                    value="${redis.port}"  
                    type="int" />  
            	</bean>  -->
        	</list>  
       	</constructor-arg>  
    </bean>
    
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
    	<property name="hostName" value="${redis.host}"></property>
    	<property name="port" value="${redis.port}"></property>
    	<property name="password" value="${redis.auth}"></property>
    	<property name="poolConfig" ref="poolConfig"></property>
    </bean>
    
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
    	<property name="connectionFactory" ref="jedisConnectionFactory"></property>
    	<property name="keySerializer" >
    		<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
    	</property>
    	<property name="valueSerializer">
    		<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"></bean>
    	</property>
    </bean>

    <!-- 配置redis end -->
	
</beans>